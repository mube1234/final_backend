# Generated by Django 3.2.5 on 2021-07-10 06:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format : 0987654321 or +251987654321 up to 15 digits allowed', regex='^\\+?1?\\d{10,15}$')])),
                ('department', models.CharField(blank=True, choices=[('CSE', 'CSE'), ('ECE', 'ECE'), ('EPCE', 'EPCE'), ('MCE', 'MCE'), ('MSE', 'MSE'), ('CHE', 'CHE'), ('CVE', 'CVE'), ('WRE', 'WRE'), ('ARCH', 'ARCH'), ('Maths', 'Maths'), ('Pysics', 'Pysics'), ('Chemistry', 'Chemistry'), ('Bio', 'Bio'), ('Geology', 'Geology')], max_length=200, null=True)),
                ('school', models.CharField(blank=True, choices=[('SOEEC', 'SOEEC'), ('SOMCME', 'SOMCME'), ('SOCEA', 'SOCEA'), ('SOANS', 'SOANS')], max_length=200, null=True)),
                ('role', models.CharField(choices=[('Passenger', 'Passenger'), ('TSHO', 'TSHO'), ('Mechanic', 'Mechanic'), ('Driver', 'Driver'), ('StoreManager', 'Store Manager'), ('SchoolDean', 'School Dean'), ('DepartmentHead', 'Department Head'), ('VicePresident', 'Vice President')], max_length=200)),
                ('date_registered', models.DateField(auto_now_add=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occupation', models.CharField(max_length=200, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('house_no', models.CharField(max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(choices=[('minibus', 'minibus'), ('bus', 'bus'), ('cobra', 'cobra'), ('ambulance', 'ambulance')], max_length=200)),
                ('plate_number', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(choices=[('Not Occupied', 'Not Occupied'), ('Occupied', 'Occupied')], default='Not Occupied', max_length=200)),
                ('date_entered', models.DateTimeField(auto_now_add=True, null=True)),
                ('adder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add', to=settings.AUTH_USER_MODEL)),
                ('driver', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='ourapp.driver')),
            ],
        ),
        migrations.CreateModel(
            name='TransportRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_from', models.CharField(max_length=200)),
                ('destination', models.CharField(max_length=200)),
                ('reason', models.TextField(max_length=400)),
                ('passenger_numbers', models.PositiveIntegerField(default=1)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved')], default='Pending', max_length=200)),
                ('status2', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved')], default='Pending', max_length=200)),
                ('status3', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved')], default='Pending', max_length=200)),
                ('passenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_request', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift', models.CharField(choices=[('Morning', 'Morning'), ('Afternoon', 'Afternoon'), ('Evening', 'Evening')], max_length=100)),
                ('service_type', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('time', models.CharField(max_length=200)),
                ('place', models.CharField(max_length=200)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adder', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_name', to='ourapp.driver')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=200, null=True)),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='passenger', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApproveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(default='06:00am', max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ourapp.transportrequest')),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ourapp.vehicle')),
            ],
        ),
    ]
